{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\OneDrive\\\\Desktop\\\\CourtsProject\\\\client\\\\src\\\\pages\\\\Tindercard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport TinderCard from 'react-tinder-card';\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Tindercard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TinderCards() {\n  _s();\n  const [index, setIndex] = useState(0);\n  const [user, setUser] = useState();\n  const [users, setUsers] = useState([]);\n  const username = localStorage.getItem(\"userID\");\n  const addMatch = async event => {\n    if (event) {\n      event.preventDefault();\n    }\n    try {\n      const resp = await axios.post(\"http://localhost:3001/addMatch\", {\n        username: username,\n        matchUsername: user.username\n      });\n    } catch (err) {\n      console.err(err);\n    }\n  };\n  const getUser = async event => {\n    if (event) {\n      event.preventDefault();\n    }\n    try {\n      console.log(index);\n      const resp = await axios.get(`http://localhost:3001/card/${users[index]}`);\n      setIndex(index + 1);\n      if (index > users.length) {\n        setIndex(0);\n      }\n      setUser(resp.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const getUsers = async event => {\n    if (event) {\n      event.preventDefault();\n    }\n    try {\n      const resp = await axios.post(`http://localhost:3001/getUsersSimilar`, {\n        username\n      });\n      setUsers(resp.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleSwipe = (direction, username) => {\n    if (direction === 'left') {\n      console.log(`${username} swiped left`);\n      getUser;\n      // Perform actions for left swipe\n    } else if (direction === 'right') {\n      console.log(`${username} swiped right`);\n      // Perform actions for right swipe\n    }\n  };\n  useEffect(() => {\n    // This function will run when the component mounts\n    // You can place your code here\n    getUsers();\n\n    // If you want to run some cleanup when the component unmounts,\n    // you can return a function from useEffect\n    return () => {\n      // Cleanup code here\n      console.log('Got users');\n    };\n  }, []);\n\n  // const people = [];\n  // setPeople([...people, 'ryan', 'lucas']) to add ppl\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getUser,\n      children: \"Click for new Potential Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), !user ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Find a new match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tinderCards__cardContainer\",\n      children: /*#__PURE__*/_jsxDEV(TinderCard, {\n        className: \"swipe\",\n        preventSwipe: ['up', 'down'],\n        onSwipe: direction => handleSwipe(direction, user.username),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundImage: `url(${user.url})`\n          },\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Age: \", user.age]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, user.username, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 7\n  }, this);\n}\n_s(TinderCards, \"FG8JgF2kaYljr6+9ujRPfnSIIVc=\");\n_c = TinderCards;\nexport default TinderCards;\nvar _c;\n$RefreshReg$(_c, \"TinderCards\");","map":{"version":3,"names":["React","useState","useEffect","TinderCard","useNavigate","axios","jsxDEV","_jsxDEV","TinderCards","_s","index","setIndex","user","setUser","users","setUsers","username","localStorage","getItem","addMatch","event","preventDefault","resp","post","matchUsername","err","console","getUser","log","get","length","data","error","getUsers","handleSwipe","direction","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","preventSwipe","onSwipe","style","backgroundImage","url","age","_c","$RefreshReg$"],"sources":["C:/Users/lucas/OneDrive/Desktop/CourtsProject/client/src/pages/Tindercard.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport TinderCard from 'react-tinder-card'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./Tindercard.css\";\r\n\r\n\r\n\r\nfunction TinderCards() {\r\n  \r\n  const [index, setIndex] = useState(0);\r\n  const [user, setUser] = useState();\r\n  const [users, setUsers] = useState([]);\r\n  const username =  localStorage.getItem(\"userID\")\r\n\r\n  const addMatch = async (event) => {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    try {\r\n      const resp = await axios.post(\"http://localhost:3001/addMatch\", {username: username, matchUsername : user.username});\r\n    } catch(err) {\r\n      console.err(err)\r\n    }\r\n  }\r\n\r\n  const getUser = async (event) => {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    try {\r\n        console.log(index)\r\n        const resp = await axios.get(`http://localhost:3001/card/${users[index]}`, );\r\n        setIndex(index+1)\r\n        if (index > users.length) {\r\n          setIndex(0)\r\n        }\r\n        setUser(resp.data)  \r\n    }\r\n    catch (err) {\r\n        console.error(err);\r\n    }\r\n  };\r\n  const getUsers = async (event) => {\r\n    \r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    try {\r\n        const resp = await axios.post(`http://localhost:3001/getUsersSimilar`, {username});\r\n        setUsers(resp.data);\r\n        \r\n       \r\n        \r\n    }\r\n    catch (err) {\r\n        console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleSwipe = (direction, username) => {\r\n    if (direction === 'left') {\r\n      console.log(`${username} swiped left`);\r\n      getUser\r\n      // Perform actions for left swipe\r\n    } else if (direction === 'right') {\r\n      console.log(`${username} swiped right`);\r\n      // Perform actions for right swipe\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // This function will run when the component mounts\r\n    // You can place your code here\r\n    getUsers()\r\n  \r\n    \r\n    // If you want to run some cleanup when the component unmounts,\r\n    // you can return a function from useEffect\r\n    return () => {\r\n      // Cleanup code here\r\n      console.log('Got users');\r\n    };\r\n  }, []);\r\n    \r\n  \r\n  \r\n  \r\n    \r\n    \r\n    // const people = [];\r\n    // setPeople([...people, 'ryan', 'lucas']) to add ppl\r\n    \r\n    \r\n    return (\r\n      <div>\r\n      <button onClick={getUser}>Click for new Potential Match</button>\r\n\r\n      {!user ? <h2>Find a new match</h2> :\r\n        <div className=\"tinderCards__cardContainer\">\r\n          <TinderCard\r\n            className=\"swipe\"\r\n            key={user.username}\r\n            preventSwipe={['up', 'down']}\r\n            onSwipe={(direction) => handleSwipe(direction, user.username)}\r\n          >\r\n            <div \r\n              style={{backgroundImage: `url(${user.url})`}}\r\n              className=\"card\"\r\n            >\r\n              {/* Displaying username and sport under each other */}\r\n              <div className=\"Info\">\r\n                <h3>{user.username}</h3>\r\n                <h3>Age: {user.age}</h3>\r\n              </div>\r\n            </div>\r\n          </TinderCard>\r\n        </div>\r\n      }\r\n    </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default TinderCards;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}