{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Courts\\\\client\\\\src\\\\pages\\\\Chats.js\",\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport Matches from \"./ChatComponents/matches.jsx\";\nimport MessageBubble from \"./ChatComponents/messageBubbles.jsx\";\nimport useMatch from \"../zustand/useMatch.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chats() {\n  _s2();\n  var _s = $RefreshSig$();\n  const username = localStorage.getItem(\"userID\");\n  const navigate = useNavigate();\n  const {\n    selectedMatch,\n    setSelectedMatch\n  } = useMatch();\n  const [textMessages, setTextMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n\n  //send message function. Stored in database\n  const sendMessage = async event => {\n    event.preventDefault();\n    try {\n      await axios.post(\"http://localhost:3001/chats\", {\n        message: message,\n        username: username,\n        contact: selectedMatch.username\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  //Get matches from database when page loads.\n  const useGetMatches = () => {\n    _s();\n    const [matches, setMatches] = useState([]);\n    useEffect(() => {\n      const getMatches = async () => {\n        try {\n          const res = await axios.get(\"http://localhost:3001/chats\", {\n            params: {\n              username: username\n            }\n          });\n          setMatches(res.data);\n        } catch (err) {\n          console.error(err);\n        }\n      };\n      getMatches();\n    }, []);\n    return {\n      matches\n    };\n  };\n\n  //class that displays when no chat is selected.\n  _s(useGetMatches, \"YhlcfFikU4Xnm4DkUW695+Zqf6o=\");\n  const NoChatSelected = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-box\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Start Chatting!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  };\n\n  //deselect match when page is reloaded or navigated away from\n  useEffect(() => {\n    return () => setSelectedMatch(null);\n  }, []);\n\n  //Get messages from the database based on the match selected. \n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:3001/chats/:id\", {\n          params: {\n            username: username,\n            contact: selectedMatch.username\n          }\n        });\n        setTextMessages(res.data);\n      } catch (err) {\n        console.error(err);\n      }\n      return {\n        textMessages\n      };\n    };\n    if (selectedMatch !== null && selectedMatch !== void 0 && selectedMatch._id) getMessages();\n  }, [selectedMatch, sendMessage]);\n\n  // useEffect(() => { \n\n  // },[textMessages])\n\n  const {\n    matches\n  } = useGetMatches();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"match-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Matches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), matches.map(match => /*#__PURE__*/_jsxDEV(Matches, {\n            match: match\n          }, match._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), !selectedMatch ? /*#__PURE__*/_jsxDEV(NoChatSelected, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messages-box\",\n            children: textMessages.map(textMessage => /*#__PURE__*/_jsxDEV(MessageBubble, {\n              textMessage: textMessage\n            }, textMessage._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"send-message-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"first_name\",\n                type: \"text\",\n                required: true,\n                placeholder: \"Write your messaage here...\",\n                value: message,\n                onChange: event => {\n                  setMessage(event.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: sendMessage,\n              children: \"Send Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n_s2(Chats, \"4F2kx5bMag6t3ugabxtx6Ej/aJ8=\", false, function () {\n  return [useNavigate, useMatch, useGetMatches];\n});\n_c = Chats;\nexport default Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","Matches","MessageBubble","useMatch","jsxDEV","_jsxDEV","Chats","_s2","_s","$RefreshSig$","username","localStorage","getItem","navigate","selectedMatch","setSelectedMatch","textMessages","setTextMessages","message","setMessage","sendMessage","event","preventDefault","post","contact","err","console","error","useGetMatches","matches","setMatches","getMatches","res","get","params","data","NoChatSelected","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getMessages","_id","map","match","textMessage","id","type","required","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/Courts/client/src/pages/Chats.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState , useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Matches from \"./ChatComponents/matches.jsx\";\r\nimport MessageBubble from \"./ChatComponents/messageBubbles.jsx\";\r\nimport useMatch from \"../zustand/useMatch.js\";\r\n\r\n\r\n\r\n\r\n\r\nfunction Chats(){\r\n    const username = localStorage.getItem(\"userID\");\r\n    const navigate = useNavigate();\r\n\r\n    const { selectedMatch, setSelectedMatch } = useMatch();\r\n    const [textMessages, setTextMessages] = useState([]);\r\n\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    //send message function. Stored in database\r\n    const sendMessage = async (event) => {\r\n        event.preventDefault();\r\n        try{\r\n            await axios.post(\"http://localhost:3001/chats\", {message : message, username : username, contact : selectedMatch.username});\r\n        } catch (err){\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    //Get matches from database when page loads.\r\n    const useGetMatches = () => {\r\n        const [matches, setMatches] = useState([]);\r\n\r\n        useEffect(() => {\r\n            const getMatches = async () => {\r\n                try {\r\n                    \r\n                    const res = await axios.get(\"http://localhost:3001/chats\", {\r\n                        params: { username : username }\r\n                    });\r\n                    setMatches(res.data);\r\n                } catch (err) {\r\n                    console.error(err);\r\n                }\r\n            }\r\n            getMatches();\r\n        }, []);\r\n        return { matches };\r\n    }\r\n\r\n    //class that displays when no chat is selected.\r\n    const NoChatSelected = () => {\r\n        return (\r\n            <div className=\"message-box\">\r\n                <h2>Start Chatting!</h2>            \r\n            </div>\r\n        )\r\n    }\r\n\r\n    //deselect match when page is reloaded or navigated away from\r\n    useEffect(() => {\r\n        return () => setSelectedMatch(null)\r\n    }, [])\r\n\r\n    //Get messages from the database based on the match selected. \r\n    useEffect(() => {\r\n        const getMessages = async () => {\r\n            try {\r\n                const res = await axios.get(\"http://localhost:3001/chats/:id\", {\r\n                    params: { username : username, contact : selectedMatch.username }\r\n                });\r\n                setTextMessages(res.data);\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n            return { textMessages };\r\n        }\r\n        if(selectedMatch?._id) getMessages();\r\n    },[selectedMatch, sendMessage])\r\n\r\n    // useEffect(() => { \r\n\r\n\r\n    // },[textMessages])\r\n\r\n    const { matches } = useGetMatches();\r\n\r\n    return (\r\n        \r\n        <div>\r\n            <div className=\"chat\">\r\n                <div className=\"center-chat\">\r\n                    <div className=\"match-box\">\r\n                        <h2>Matches</h2>\r\n                        {matches.map((match) => (\r\n                            <Matches \r\n                                key={match._id}\r\n                                match={match}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div className=\"chat-divider\"></div>\r\n                        {!selectedMatch ? (\r\n                            <NoChatSelected />\r\n                        ) : (\r\n                            <div className=\"message-box\">\r\n                                <div className=\"messages-box\">\r\n                                    {textMessages.map((textMessage) => (\r\n                                        <MessageBubble \r\n                                            key={textMessage._id}\r\n                                            textMessage={textMessage}\r\n                                        />\r\n                                    ))}\r\n\r\n                                    \r\n                                    \r\n                                </div>\r\n\r\n                                <div className=\"send-message-box\">\r\n                                <label>\r\n                                    <input\r\n                                        id=\"first_name\"\r\n                                        type=\"text\"\r\n                                        required={true}\r\n                                        placeholder=\"Write your messaage here...\"\r\n                                        value={message}\r\n                                        onChange={(event) => {\r\n                                            setMessage(event.target.value);\r\n                                        }}\r\n                                        />\r\n                                </label>\r\n                                <button className = \"btn btn-primary\" onClick = {sendMessage}>\r\n                                    Send Message\r\n                                </button>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chats"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAGC,SAAS,QAAQ,OAAO;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,aAAa,MAAM,qCAAqC;AAC/D,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM9C,SAASC,KAAKA,CAAA,EAAE;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACZ,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAC/C,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAM;IAAEc,aAAa;IAAEC;EAAiB,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EACtD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMuB,WAAW,GAAG,MAAOC,KAAK,IAAK;IACjCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAG;MACC,MAAMvB,KAAK,CAACwB,IAAI,CAAC,6BAA6B,EAAE;QAACL,OAAO,EAAGA,OAAO;QAAER,QAAQ,EAAGA,QAAQ;QAAEc,OAAO,EAAGV,aAAa,CAACJ;MAAQ,CAAC,CAAC;IAC/H,CAAC,CAAC,OAAOe,GAAG,EAAC;MACTC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACtB;EACJ,CAAC;;EAED;EACA,MAAMG,aAAa,GAAGA,CAAA,KAAM;IAAApB,EAAA;IACxB,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;IAE1CC,SAAS,CAAC,MAAM;MACZ,MAAMiC,UAAU,GAAG,MAAAA,CAAA,KAAY;QAC3B,IAAI;UAEA,MAAMC,GAAG,GAAG,MAAMjC,KAAK,CAACkC,GAAG,CAAC,6BAA6B,EAAE;YACvDC,MAAM,EAAE;cAAExB,QAAQ,EAAGA;YAAS;UAClC,CAAC,CAAC;UACFoB,UAAU,CAACE,GAAG,CAACG,IAAI,CAAC;QACxB,CAAC,CAAC,OAAOV,GAAG,EAAE;UACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;QACtB;MACJ,CAAC;MACDM,UAAU,CAAC,CAAC;IAChB,CAAC,EAAE,EAAE,CAAC;IACN,OAAO;MAAEF;IAAQ,CAAC;EACtB,CAAC;;EAED;EAAArB,EAAA,CApBMoB,aAAa;EAqBnB,MAAMQ,cAAc,GAAGA,CAAA,KAAM;IACzB,oBACI/B,OAAA;MAAKgC,SAAS,EAAC,aAAa;MAAAC,QAAA,eACxBjC,OAAA;QAAAiC,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAEd,CAAC;;EAED;EACA5C,SAAS,CAAC,MAAM;IACZ,OAAO,MAAMiB,gBAAgB,CAAC,IAAI,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAjB,SAAS,CAAC,MAAM;IACZ,MAAM6C,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMX,GAAG,GAAG,MAAMjC,KAAK,CAACkC,GAAG,CAAC,iCAAiC,EAAE;UAC3DC,MAAM,EAAE;YAAExB,QAAQ,EAAGA,QAAQ;YAAEc,OAAO,EAAGV,aAAa,CAACJ;UAAS;QACpE,CAAC,CAAC;QACFO,eAAe,CAACe,GAAG,CAACG,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOV,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACtB;MACA,OAAO;QAAET;MAAa,CAAC;IAC3B,CAAC;IACD,IAAGF,aAAa,aAAbA,aAAa,eAAbA,aAAa,CAAE8B,GAAG,EAAED,WAAW,CAAC,CAAC;EACxC,CAAC,EAAC,CAAC7B,aAAa,EAAEM,WAAW,CAAC,CAAC;;EAE/B;;EAGA;;EAEA,MAAM;IAAES;EAAQ,CAAC,GAAGD,aAAa,CAAC,CAAC;EAEnC,oBAEIvB,OAAA;IAAAiC,QAAA,eACIjC,OAAA;MAAKgC,SAAS,EAAC,MAAM;MAAAC,QAAA,eACjBjC,OAAA;QAAKgC,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACxBjC,OAAA;UAAKgC,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACtBjC,OAAA;YAAAiC,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACfb,OAAO,CAACgB,GAAG,CAAEC,KAAK,iBACfzC,OAAA,CAACJ,OAAO;YAEJ6C,KAAK,EAAEA;UAAM,GADRA,KAAK,CAACF,GAAG;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEjB,CACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAENrC,OAAA;UAAKgC,SAAS,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAC/B,CAAC5B,aAAa,gBACXT,OAAA,CAAC+B,cAAc;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAElBrC,OAAA;UAAKgC,SAAS,EAAC,aAAa;UAAAC,QAAA,gBACxBjC,OAAA;YAAKgC,SAAS,EAAC,cAAc;YAAAC,QAAA,EACxBtB,YAAY,CAAC6B,GAAG,CAAEE,WAAW,iBAC1B1C,OAAA,CAACH,aAAa;cAEV6C,WAAW,EAAEA;YAAY,GADpBA,WAAW,CAACH,GAAG;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEvB,CACJ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAID,CAAC,eAENrC,OAAA;YAAKgC,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBACjCjC,OAAA;cAAAiC,QAAA,eACIjC,OAAA;gBACI2C,EAAE,EAAC,YAAY;gBACfC,IAAI,EAAC,MAAM;gBACXC,QAAQ,EAAE,IAAK;gBACfC,WAAW,EAAC,6BAA6B;gBACzCC,KAAK,EAAElC,OAAQ;gBACfmC,QAAQ,EAAGhC,KAAK,IAAK;kBACjBF,UAAU,CAACE,KAAK,CAACiC,MAAM,CAACF,KAAK,CAAC;gBAClC;cAAE;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACRrC,OAAA;cAAQgC,SAAS,EAAG,iBAAiB;cAACkB,OAAO,EAAInC,WAAY;cAAAkB,QAAA,EAAC;YAE9D;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACnC,GAAA,CApIQD,KAAK;EAAA,QAEON,WAAW,EAEgBG,QAAQ,EAuEhCyB,aAAa;AAAA;AAAA4B,EAAA,GA3E5BlD,KAAK;AAsId,eAAeA,KAAK;AAAA,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}